velero:
  credentials:
    useSecret: true

oauth2-proxy:
  config:
    configFile: |-
      upstreams = [ "file:///dev/null" ]
  extraArgs:
    provider: "github"
    scope: "user:email"
    cookie-domain: ".k8s.zzamzam.dev"
    cookie-expire: "24h0m0s"
    cookie-samesite: "lax"
    session-cookie-minimal: "false"
    session-store-type: "cookie"
    set-authorization-header: "false"
    silence-ping-logging: "true"
    whitelist-domain: ".k8s.zzamzam.dev"
  metrics:
    enabled: false
  authenticatedEmailsFile:
    enabled: true
    persistence: configmap
  ingress:
    enabled: true
    path: /
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt"
    hosts:
    - auth.k8s.zzamzam.dev
    tls:
    - secretName: letsencrypt
      hosts:
      - auth.k8s.zzamzam.dev

ingress-nginx:
  tcp:
    "4022": "gitea/gitea-ssh:22"

ingresses:
  ingressMap:
    ip-k8s-zzamzam-dev:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/server-snippet: |
          location = / {
            add_header Content-Type text/plain;
            return 200 $remote_addr;
          }
      spec:
        rules:
        - host: ip.k8s.zzamzam.dev
        tls:
        - hosts:
          - ip.k8s.zzamzam.dev
          secretName: ip-k8s-zzamzam-dev

cert-manager-issuers:
  issuersMap:
    letsencrypt:
      kind: ClusterIssuer
      namespace: cert-manager
      spec:
        acme:
          server: https://acme-v02.api.letsencrypt.org/directory
          email: dangeron@gmail.com
          privateKeySecretRef:
            name: letsencrypt
          solvers:
          - http01:
              ingress:
                class: nginx

postgresql:
  global:
    storageClass: openebs-hostpath
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
  architecture: standalone
  primary:
    initdb:
      scriptsConfigMap: scripts-initdb
    persistence:
      enabled: true
      size: 8Gi

postfix:
  config:
    general:
      ALLOWED_SENDER_DOMAINS: "zzamzam.dev"
    postfix:
      mydomain: "zzamzam.dev"
      myhostname: "mx.zzamzam.dev"
      mydestination: "$myhostname, localhost.$mydomain, localhost, $mydomain"
      message_size_limit: "10485760"
  persistence:
    enabled: true
    storageClass: openebs-hostpath
    size: 1Gi
  extraVolumes:
    - name: opendkim-keys
      secret:
        secretName: opendkim-keys
  extraVolumeMounts:
    - name: opendkim-keys
      mountPath: "/etc/opendkim/keys"
      readOnly: true
  recreateOnRedeploy: false

gitea:
  gitea:
    admin:
      existingSecret: gitea-admin
    config:
      database:
        DB_TYPE: postgres
        HOST: postgresql.postgresql.svc.cluster.local:5432
        NAME: gitea
        USER: gitea
        PASSWD: gitea
      mailer:
        ENABLED: true
        HOST: postfix-mail.postfix.svc.cluster.local:587
        FROM: gitea@zzamzam.dev
        MAILER_TYPE: smtp
      repository:
        DEFAULT_PRIVATE: private
      security:
        INSTALL_LOCK: true
      server:
        SSH_PORT: 4022
        ROOT_URL: https://git.k8s.zzamzam.dev/
      service:
        DISABLE_REGISTRATION: true
        REQUIRE_SIGNIN_VIEW: true
  persistence:
    enabled: true
    size: 2Gi
    storageClass: openebs-hostpath
  memcached:
    enabled: true
  postgresql:
    enabled: false
  mysql:
    enabled: false
  mariadb:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt"
      nginx.ingress.kubernetes.io/auth-url: "https://auth.k8s.zzamzam.dev/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://auth.k8s.zzamzam.dev/oauth2/start?rd=$scheme%3A%2F%2F$host"
    hosts:
      - host: git.k8s.zzamzam.dev
        paths:
          - path: /
            pathType: Prefix
    tls:
    - secretName: letsencrypt
      hosts:
        - git.k8s.zzamzam.dev

keycloak:
  global:
    storageClass: openebs-hostpath
  auth:
    adminUser: keycloak
    managementUser: manager
  proxyAddressForwarding: true
  service:
    type: ClusterIP
  postgresql:
    enabled: false
  externalDatabase:
    host: postgresql.postgresql.svc.cluster.local
    port: 5432
    user: keycloak
    database: keycloak
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt"
    hostname: auth.k8s.zzamzam.dev
    tls: true
    extraTls:
    - secretName: letsencrypt
      hosts:
        - auth.k8s.zzamzam.dev

joplin-server:
  image:
    tag: 2.6.14-beta
  env:
    TZ: "UTC"
    APP_BASE_URL: "https://joplin.k8s.zzamzam.dev"
    DB_CLIENT: pg
    POSTGRES_HOST: postgresql.postgresql.svc.cluster.local
    POSTGRES_PORT: 5432
    POSTGRES_DATABASE: joplin
    POSTGRES_USER: joplin
    MAILER_ENABLED: "1"
    MAILER_HOST: postfix-mail.postfix.svc.cluster.local
    MAILER_PORT: 587
    MAILER_SECURE: "0"
    MAILER_NOREPLY_EMAIL: joplin@zzamzam.dev
  ingress:
    main:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: "letsencrypt"
      hosts:
        - host: joplin.k8s.zzamzam.dev
          paths:
            - path: /
              pathType: Prefix
      tls:
      - secretName: letsencrypt
        hosts:
          - joplin.k8s.zzamzam.dev
  postgresql:
    enabled: false

remark42:
  nodeSelector: null
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt"
    host: remark42.k8s.zzamzam.dev
    tls:
      secretName: letsencrypt
  settings:
    url: https://remark42.k8s.zzamzam.dev
    site: zzamzam_dev
    timeZone: Europe/Moscow
    emoji: true
    auth:
      email:
        enable: true
        from: remark42@zzamzam.dev
    oauth:
      github:
        enabled: true
      google:
        enabled: true
      yandex:
        enabled: true
    smtp:
      enabled: true
      host: postfix-mail.postfix.svc.cluster.local
      port: "587"
      tls: false
    notify:
      type:
        admin: email
      email:
        fromAddress: remark42@zzamzam.dev

  storage:
    className: openebs-hostpath
    requestedSize: 1Gi

tt-rss:
  image:
    tag: v2.0.9113
  env:
    TZ: "Europe/Moscow"
    TTRSS_DB_HOST: postgresql.postgresql.svc.cluster.local
    TTRSS_DB_PORT: 5432
    TTRSS_DB_USER: rss
    TTRSS_DB_NAME: rss
    TTRSS_SELF_URL_PATH: https://rss.k8s.zzamzam.dev/
    TTRSS_SINGLE_USER_MODE: true
    TTRSS_AUTH_AUTO_CREATE: false
    TTRSS_ENABLE_REGISTRATION: false
  postgresql:
    enabled: false
  ingress:
    main:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/auth-url: "https://auth.k8s.zzamzam.dev/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.k8s.zzamzam.dev/oauth2/start?rd=$scheme%3A%2F%2F$host"
      hosts:
        - host: rss.k8s.zzamzam.dev
          paths:
            - path: /
              pathType: Prefix
      tls:
      - secretName: letsencrypt
        hosts:
          - rss.k8s.zzamzam.dev

freshrss:
  env:
    TZ: "Europe/Moscow"
  ingress:
    main:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/auth-url: "https://auth.k8s.zzamzam.dev/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.k8s.zzamzam.dev/oauth2/start?rd=$scheme%3A%2F%2F$host"
      hosts:
        - host: freshrss.k8s.zzamzam.dev
          paths:
            - path: /
              pathType: Prefix
      tls:
      - secretName: letsencrypt-freshrss
        hosts:
          - freshrss.k8s.zzamzam.dev
  persistence:
    config:
      enabled: true
      size: 1Gi
      storageClass: openebs-hostpath
